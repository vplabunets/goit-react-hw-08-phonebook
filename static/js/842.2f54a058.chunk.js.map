{"version":3,"file":"static/js/842.2f54a058.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.contacts.filter;\n","import styled from 'styled-components';\n\nconst FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  align-self: center;\n  align-items: center;\n`;\nconst FormWrap = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  margin: 0 auto;\n  align-self: center;\n  align-items: flex-end;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n  margin-bottom: 10px;\n`;\nconst FormInput = styled.input`\n  display: flex;\n`;\nconst FormButton = styled.button`\n  align-self: center;\n  justify-content: center;\n  width: 150px;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0fece1;\n    border-radius: 2px;\n  }\n`;\n\nexport { FormEl, FormWrap, FormLabel, FormInput, FormButton };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nimport {\n  FormEl,\n  FormWrap,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const { name, phone } = form.elements;\n    for (const contact of contacts) {\n      if (contact.name === name.value) {\n        return alert(`${contact.name} is already contacts.`);\n      }\n    }\n    // console.log({ name: name.value, phone: phone.value });\n    // console.log(fetchContacts);\n    dispatch(addContact({ name: name.value, number: phone.value }));\n    form.reset();\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <FormWrap>\n        <FormLabel>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </FormWrap>\n    </FormEl>\n  );\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import styled from 'styled-components';\n\nconst Wrapper = styled.li`\n  display: flex;\n  padding: 5px;\n  justify-content: space-between;\n  &:not(:last-child) {\n  }\n`;\nconst Button = styled.button`\n  align-self: center;\n  justify-content: center;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0fece1;\n    border-radius: 2px;\n  }\n`;\nexport { Wrapper, Button };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { Wrapper, Button } from './ContactItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number, id } = contact;\n  const dispatch = useDispatch();\n  const contactCleaner = () => dispatch(deleteContact(id));\n\n  return (\n    <Wrapper>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <Button contact={contact.id} type=\"button\" onClick={contactCleaner}>\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    let visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return visibleContacts;\n  };\n\n  return (\n    <List>\n      {filterContacts().map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto 0 auto;\n  text-align: center;\n  align-items: space-between;\n  margin-bottom: 10px;\n`;\nexport const FormInput = styled.input`\n  margin-top: 10px;\n  display: flex;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nimport { FormInput, FormLabel } from '../Filter/Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = evt => {\n    console.log(evt.target.value);\n    dispatch(filterContacts(evt.target.value.trim()));\n  };\n\n  return (\n    <FormLabel>\n      Find contacts by name\n      <FormInput\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={changeFilter}\n      />\n    </FormLabel>\n  );\n};\n","import styled from 'styled-components';\n\nconst AppWrap = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  background-color: #8bf3dd;\n  width: 400px;\n`;\nconst PageTitle = styled.h1`\n  text-align: center;\n`;\nconst SectionTitle = styled.h2`\n  text-align: center;\n`;\nexport { AppWrap, PageTitle, SectionTitle };\n","import { useSelector } from 'react-redux';\n// import { fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getError, getIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { AppWrap, PageTitle, SectionTitle } from '../components/App/App.styled';\n\nexport default function ContactsPage() {\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <AppWrap>\n      <PageTitle>Phonebook</PageTitle>\n      <ContactForm></ContactForm>\n      <SectionTitle>Contacts</SectionTitle>\n      <Filter />\n      {isLoading && 'Your contacts are loading, please wait foe a while'}\n      {error && { error }}\n      {getContacts.length > 0 && <ContactList />}\n    </AppWrap>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getError","error","getIsLoading","isLoading","getFilter","filter","FormEl","styled","FormWrap","FormLabel","FormInput","FormButton","ContactForm","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","elements","name","phone","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","contact","alert","addContact","number","reset","type","pattern","title","required","Wrapper","Button","ContactItem","id","onClick","deleteContact","List","ContactList","useEffect","fetchContacts","normalizedFilter","toLowerCase","includes","filterContacts","map","Filter","onChange","console","log","target","trim","AppWrap","PageTitle","SectionTitle","ContactsPage"],"sourceRoot":""}